import { Env } from '../index';

/**\n * Response interface for Telegram API calls\n */\ninterface TelegramResponse {\n  success: boolean;\n  error?: string;\n}\n\n/**\n * Sends a message to a Telegram chat using the Bot API\n * \n * @param env - Cloudflare Workers environment containing Telegram credentials\n * @param message - The message text to send (supports Markdown formatting)\n * @returns Promise resolving to success status and optional error\n */\nexport async function sendTelegramMessage(env: Env, message: string): Promise<TelegramResponse> {\n  if (!env.TELEGRAM_BOT_TOKEN || !env.TELEGRAM_CHAT_ID) {\n    console.error('Telegram environment variables are not set.');\n    return { success: false, error: 'Telegram credentials not configured' };\n  }\n\n  const url = `https://api.telegram.org/bot${env.TELEGRAM_BOT_TOKEN}/sendMessage`;\n  const payload = {\n    chat_id: env.TELEGRAM_CHAT_ID,\n    text: message,\n    parse_mode: 'Markdown',\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    });\n\n    const responseData = await response.json();\n    if (!responseData.ok) {\n      console.error('Telegram API Error:', responseData);\n      return { success: false, error: `Telegram API error: ${responseData.description}` };\n    }\n    \n    console.log('Telegram message sent successfully');\n    return { success: true };\n  } catch (error) {\n    console.error('Failed to send Telegram message:', error);\n    return { success: false, error: `Network error: ${error}` };\n  }\n}